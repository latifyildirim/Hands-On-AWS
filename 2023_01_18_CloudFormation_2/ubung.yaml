AWSTemplateFormatVersion: 2010-09-09 
Description: Bu kendi kendime denemem
Parameters:
  AmiId:
    Type: String
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: A VPC that allows the load balancer access to the Internet
  SG:
    Type: 'List<AWS::EC2::SecurityGroup::Id>' 
    Description: A security group in the selected VPC that allows HTTP access on the inbound port
  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Select a key
  Subnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: At least two public subnets in different Availability Zones in the selected VPC
  CPUPolicyTargetValue:
    Type: String
    Description: The target utilization for the CPU metric
Resources:
  TG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 6
      HealthyThresholdCount: 5 
      Name: TG
      Port: 80
      Protocol: HTTP 
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPC
  LT:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateData: 
        ImageId: !Ref AmiId
        InstanceType: t2.micro 
        KeyName: !Ref KeyPair 
        SecurityGroupIds: !Ref SG
        UserData: !Base64 |
          #! /bin/bash

          yum update -y
          yum install httpd -y
          FOLDER="https://raw.githubusercontent.com/latifyildirim/projects/main/kittens-carousel-static-website-ec2/static-web/"
          cd /var/www/html
          wget $FOLDER/index.html
          wget $FOLDER/cat0.jpg
          wget $FOLDER/cat1.jpg
          wget $FOLDER/cat2.jpg
          wget $FOLDER/cat3.png
          systemctl start httpd
          systemctl enable httpd
  LB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      SecurityGroups: !Ref SG
      Subnets: !Ref Subnets 
  LBListner:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties: 
      DefaultActions: # Required
        - TargetGroupArn: !Ref TG
          Type: forward
      LoadBalancerArn: !Ref LB
      Port: 80
      Protocol: HTTP
  ASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      DesiredCapacity: 2 
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB  
      LaunchTemplate: 
        LaunchTemplateId: !Ref LT
        Version: !GetAtt LT.LatestVersionNumber 
      MaxSize: 4 # Required 
      MinSize: 1 # Required 
      TargetGroupARNs:
        - !Ref TG 
      VPCZoneIdentifier: !Ref Subnets
  CPUPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties: 
      AutoScalingGroupName: !Ref ASG # Required 
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: !Ref CPUPolicyTargetValue
Outputs:
  BackupLoadBalancerDNSName:
    Description: The DNSName of the backup load balancer
    Value: !GetAtt LB.DNSName  
  StackVPC:
    Description: The ID of the VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VPC"