AWSTemplateFormatVersion: 2010-09-09
# Description: |
  
Parameters: 
  InstanceTypeParameter:
    Description: Ec2 tipini sec bakalim
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.nano
      - t1.nano
      - t1.micro
  KeyPairParameter:
    Description: KeyPair sec
    Type: AWS::EC2::KeyPair::KeyName 
Mappings: 
  RegionImageMap: 
    us-east-1: 
      AMI : "ami-0b5eea76982371e91"
    us-west-1: 
      AMI : "ami-0bdb828fd58c52235"
    eu-west-1: 
      AMI : "ami-047bb4163c506cd98"
    ap-southeast-1: 
      AMI : "ami-08569b978cc4dfa10"
    ap-northeast-1: 
      AMI : "ami-06cd52961ce9f0d85"
  
Resources:
  myLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !FindInMap 
          - RegionImageMap
          - !Ref AWS::Region
          - AMI
        InstanceType: !Ref InstanceTypeParameter
        KeyName: !Ref KeyPairParameter
        SecurityGroupIds:
          - !GetAtt mySG.GroupId
        UserData: !Base64 |
          #!/bin/bash

          #update os
          yum update -y
          #install apache server
          yum install -y httpd
          # get private ip address of ec2 instance using instance metadata
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
          # get public ip address of ec2 instance using instance metadata
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4` 
          # get date and time of server
          DATE_TIME=`date`
          # set all permissions
          chmod -R 777 /var/www/html
          # create a custom index.html file
          echo "<html>
          <head>
              <title> Application Load Balancer</title>
          </head>
          <body>
              <h1>Testing Application Load Balancer</h1>
              <h2>Congratulations! You have created an instance from Launch Template</h2>
              <h3>This web server is launched from the launch template by Bakalim 3.verison u otomatik aldi mi?</h3>
              <p>This instance is created at <b>$DATE_TIME</b></p>
              <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
              <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
          </body>
          </html>" > /var/www/html/index.html
          # start apache server
          systemctl start httpd
          systemctl enable httpd


  myASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      DesiredCapacity: "2" 
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB 
      LaunchTemplate:
        LaunchTemplateId: "String"
        LaunchTemplateName: "String"
        Version: "String" 
      MaxSize: "String" # Required
      MetricsCollection:
        MetricsCollection
      MinSize: "String" # Required 
      TargetGroupARNs:
        TargetGroupARNs
      TerminationPolicies:
        TerminationPolicies
      VPCZoneIdentifier:
        VPCZoneIdentifier        
  myTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckIntervalSeconds: 10 
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5 
      Port: 80
      Protocol: HTTP 
      UnhealthyThresholdCount: 3
      VpcId: "String" # sonra eklicezz
  mySG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enables SSH and HTTP # Required  
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: "String"  # add later
  
# Outputs: