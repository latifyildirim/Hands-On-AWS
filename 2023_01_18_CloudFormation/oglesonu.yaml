AWSTemplateFormatVersion: 2010-09-09
Description: |
  
Parameters:

  LatifVPCParameter:
    Description: Bir VPC Sec
    Type: AWS::EC2::VPC::Id
  
  LatifKeyPairParameter:
    Description: Bir Key Sec
    Type: AWS::EC2::KeyPair::KeyName
  
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
  
  LatifSubnetParameter:
    Description: En az 2 subnet secmelisin
    Type: 'List<AWS::EC2::Subnet::Id>' 

Mappings: 
  RegionMap: 
    us-east-1: 
      HVM64 : "ami-0b5eea76982371e91"
    us-west-1: 
      HVM64 : "ami-0bdb828fd58c52235"
    eu-west-1: 
      HVM64 : "ami-047bb4163c506cd98"
    ap-southeast-1: 
      HVM64 : "ami-08569b978cc4dfa10"
    ap-northeast-1: 
      HVM64 : "ami-06cd52961ce9f0d85"

Resources:
  LatifAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref LatifLaunchTemplate
        Version: !GetAtt LatifLaunchTemplate.LatestVersionNumber
      MaxSize: 2 # Required
      MinSize: 1 # Required
      TargetGroupARNs:
        - !Ref LatifTargetGroup
      VPCZoneIdentifier: !Ref LatifSubnetParameter

  LatifListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - Type: forward
          TargetGroupArn: !Ref LatifTargetGroup

      LoadBalancerArn: !Ref LatifLoadBalancer
      Port: 80
      Protocol: HTTP

  LatifLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !GetAtt LatifSecurutyGroup.GroupId
      Subnets: !Ref LatifSubnetParameter
      Type: application

  LatifASGPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref LatifAutoScalingGroup  # Required 
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 70.0

  LatifLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !FindInMap 
          - RegionMap
          - !Ref AWS::Region
          - HVM64 
        InstanceType: !Ref InstanceTypeParameter
        KeyName: !Ref LatifKeyPairParameter
        SecurityGroupIds:
          - !GetAtt LatifSecurutyGroup.GroupId
        UserData: !Base64 |
          #! /bin/bash
          
          yum update -y
          yum install -y httpd
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4` 
          DATE_TIME=`date`
          chmod -R 777 /var/www/html
          echo "<html>
          <head>
              <title> Congratulations! You have created an instance from Launch Template</title>
          </head>
          <body>
              <h1>This web server is launched from launch template by Latif</h1>
              <p>This instance is created at <b>$DATE_TIME</b></p>
              <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
              <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
          </body>
          </html>" > /var/www/html/index.html
          systemctl start httpd
          systemctl enable httpd
  
  LatifTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10 
      HealthCheckTimeoutSeconds: 6
      HealthyThresholdCount: 5 
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: !Ref LatifVPCParameter
  
  LatifSecurutyGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Kendim deniyorum SecurityGroup" # Required 
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref LatifVPCParameter

Outputs:
  LatifLoadBalancerDNSName:
    Description: The DNSName of the backup load balancer
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt LatifLoadBalancer.DNSName 